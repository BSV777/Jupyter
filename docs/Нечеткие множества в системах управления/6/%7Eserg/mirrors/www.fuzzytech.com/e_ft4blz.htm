<!doctype html public "-//ietf//dtd html//en">
<html>

<head>
<meta http-equiv="content-type"
content="text/html; charset=iso-8859-1">
<meta name="generator" content="microsoft frontpage 2.0">
<title>fuzzyTECH for Business / Fuzzy Logic Decision Making</title>
</head>

<body bgcolor="#c0c0c0">
<div align="left">

<table border="1" cellspacing="1" width="100%" bgcolor="#ffff00">
    <tr>
        <td bgcolor="#000080"><font color="#00ffff" size="5"
        face="arial"><b><i>fuzzy</i></b><b>TECH for Business /
        Fuzzy Logic Decision Making</b></font> </td>
        <td align="center"><a href="index.htm"><img
        src="home.gif" alt="go back to home page" width="21"
        height="21"></a><a href="e_ft4bbo.htm"><img
        src="previous.gif" alt="go to previous page in sequence"
        width="21" height="21"></a><a href="e_ft4bdp.htm"><img
        src="next.gif" alt="go to next page in sequence"
        width="21" height="21"></a> </td>
    </tr>
</table>
</div>

<p><font size="2" face="arial">The following introduction to the
basic ideas of fuzzy logic can only be brief; for more
information, please refer to the </font><a
href="e_litera.htm#buiz"><font size="2" face="arial">literature
references</font></a><font size="2" face="arial">.</font></p>

<h3><font size="3" face="arial">What Is Fuzzy Logic? </font></h3>

<p><font size="2" face="arial">How can a logic which is
&quot;fuzzy&quot; be useful? Professor Lotfi Zadeh, the inventor
of fuzzy logic, contends that a computer cannot solve problems as
well as human experts unless it is able to think in the
characteristic manner of a human being.</font><font size="2"> </font></p>

<p><font size="2" face="arial">As humans, we often rely on
imprecise expressions like &quot;usually&quot;,
&quot;expensive&quot;, or &quot;far&quot;. But the comprehension
of a computer is limited to a black-white, everything-or-nothing,
or true-false mode of thinking. In this context, Lotfi Zadeh
emphasizes the fact that we easily let ourselves be dragged along
by a desire to attain the highest possible precision without
paying attention to the imprecise character of reality.</font><font
size="2"> </font></p>

<p><font size="2" face="arial">There are many subjects which do
not fit into the precise categories of the conventional set
theory: The set of &quot;all triangles&quot; or &quot;all the
guys named John&quot; is easy to handle with conventional theory.
Either somebody's name is John or it is not. There is no other
status in between. The set of &quot;all intelligent
researchers&quot; or &quot;all the people with an expensive
car&quot;, however, is much more complicated and cannot be
handled easily by a &quot;digital&quot; mode of thinking. This is
because of the fact that there is no way to define a precise
threshold to represent a vague and blurry boundary: there are
some obviously expensive cars, like the Rolls-Royce, but many
others could be fit into this category as well, depending on how
much money you have, where you live, and how you feel!</font></p>

<h3><font size="3" face="arial">Why Use <i>fuzzy</i>TECH for
Business? </font></h3>

<p><font size="2" face="arial">As mentioned before, within
conventional logic, terms can be only &quot;true&quot; or
&quot;false&quot;. Fuzzy logic allows a generalization of
conventional logic. It provides for terms between
&quot;true&quot; and &quot;false&quot; like &quot;almost
true&quot; or &quot;partially false&quot;. Therefore, fuzzy logic
cannot be directly processed on computers. It must be transformed
by a special program called an &quot;Inference Engine&quot;.</font><font
size="2"> </font></p>

<p><font size="2" face="arial"><i>fuzzy</i>TECH for Business
provides such an Inference Engine which can be used either
directly or in an integrated form within other software packages
(spreadsheets, databases, or application software of a PC,
workstation, or mainframe). It is programmed in FTL, &quot;Fuzzy
Technology Language&quot;, a description language which is
accepted as a standard and is used by most producers.
Theoretically, such an Inference Engine is enough to incorporate
fuzzy logic on &quot;normal&quot; computers. However, programming
in FTL is not a practical way to develop and test a fuzzy logic
system.</font></p>

<p><font size="2" face="arial"><i>fuzzy</i>TECH for Business
provides a complete, graphical development environment by which
an entire fuzzy logic system can be developed without writing a
single line of FTL. With <i>fuzzy</i>TECH for Business, you will
be able to &quot;draw&quot; the system structure, all variables,
and the rule sets just as you would draw with any other graphic
program, and your fuzzy logic system with all its components is
automatically created for you.</font><font size="2"> </font></p>

<p><font size="2" face="arial">On the other hand, the subsequent
tests and optimization procedures typically take more time and
effort than the actual design of the fuzzy logic system. To make
this step as efficient and comfortable as possible, <i>fuzzy</i>TECH
for Business provides a complete set of visual tools. There are
eight (8) different debug modes for an optimum testing and
simulation environment for all sorts of applications. In
addition, there are also four (4) graphical analyzer functions to
support the verification of the rule sets through the data.</font></p>

<p><font size="2" face="arial">You may use <i>fuzzy</i>TECH for
Business as a stand-alone application or in an integrated form in
other software tools. If you use <i>fuzzy</i>TECH for Business a
stand-alone software, you will be able to build complete systems
by using the interfaces provided. But often fuzzy logic systems
are integrated as subsystems. In such cases, you may use <i>fuzzy</i>TECH
for Business as a module in your own development environment, or
use one of the standard interfaces within MS-Windows for
software, like spreadsheets or databases.</font><font size="2"> </font></p>

<p><font size="2" face="arial">Within the <i>fuzzy</i>TECH for
Business package there is a &quot;Fuzzy Design Wizard&quot; which
guides the developer step by step through a system design. This
allows a beginner to set up a fuzzy logic system without spending
a long introductory time with the software; an experienced
developer will be able to design the prototype of a complex
system in just a few minutes.</font><font size="2"> </font></p>

<h3><font size="3" face="arial">NeuroFuzzy Module of <i>fuzzy</i>TECH
for Business </font></h3>

<p><font size="2" face="arial">There are many applications where
it is easier to define the desired system behavior (or part of
it) through examples rather than through manual creation of the
rules or the linguistic variables. In such cases, you may use the
NeuroFuzzy module which is entirely integrated in <i>fuzzy</i>TECH
for Business.</font></p>

<p><font size="2" face="arial">The NeuroFuzzy module
automatically generates and optimizes not only the fuzzy logic
rules and their weights but also the membership functions from
available data which represent sample cases. The NeuroFuzzy
Module integrates neural network technologies in order to train
fuzzy logic systems. In contrast to conventional neural network
solutions, the entire training process and the resulting fuzzy
logic system remains completely self-explanatory. </font></p>

<p><font size="2" face="arial">The employed training technology
is based on a fuzzy logic inference component of <i>fuzzy</i>TECH
for Business: the use of Fuzzy Associative Maps (FAM). FAMs allow
fuzzy logic rules with an inherent 'fuzzy' character. Such FAM
rules can be viewed as generalized neurons (&quot;Approximate
Reasoning&quot;) whose plausibility is calculated through
Competitive Learning. A fuzzy logic system generator optionally
sets up appropriate membership functions and rule blocks prior to
the actual training phase based on the data sets.</font><font
size="2"> </font></p>

<p><font size="2" face="arial">The NeuroFuzzy Module can also be
used to optimize existing fuzzy logic systems. Starting with an
existing system, the NeuroFuzzy Module interactively tunes rule
weights and membership function definitions such that the system
converges to the behavior represented by the data sets. The
optimization process allows specified rules and membership
functions to be locked or opened for learning. The entire
learning process is visualized, and any fuzzy logic system
generated by the NeuroFuzzy module can be further optimized and
verified manually.</font><font size="2"> </font><font size="2"
face="arial">For more detailed information on the NeuroFuzzy
Module and the FuzzyCluster Module select </font><a
href="e_nf.htm"><font size="2" face="arial">NeuroFuzzy &amp;
FuzzyCluster Module</font></a><font size="2" face="arial">.</font></p>

<h3><font size="3" face="arial">Extended Fuzzy Technologies </font></h3>

<p><font size="2" face="arial">In addition to the common methods
of fuzzy logic, there are various expanded fuzzy technologies
which have proven to be very useful in past projects. Some
functionalities of <i>fuzzy</i>TECH for Business are the result
of research conducted by Professor Zimmermann at the University
of Aachen (RWTH), Germany. Thus, <i>fuzzy</i>TECH for Business
provides seven (7) different defuzzification methods which may be
applied to each membership function. There are also eight (8)
types of membership functions that are supported by <i>fuzzy</i>TECH
for Business, including the S-shape functions which are often
used in business applications.</font></p>

<ul>
    <li><font size="2" face="arial"><b>Support of normalized rule
        sets <br>
        </b>If you have complex applications, you can easily
        cause confusing rules using different operators, a chaos
        of parentheses and complicated &quot;if-then-else&quot;
        statements. Such constructs destroy the actual advantages
        of fuzzy logic systems, like clarity and easy expansion.<br>
        <i>fuzzy</i>TECH for Business uses a different approach
        by providing normalized rule sets and graphical structure
        editors. Even the most complex compositions, which must
        be handled within the rule syntax by other fuzzy logic
        tools, can be easily developed graphically with <i>fuzzy</i>TECH
        for Business. Applying normalized rule sets has the
        additional advantage that the rules can be transformed
        automatically and developed easily in matrix form, which
        is often more readable than text or table form in the
        case of huge and complex systems.<br>
        <i>fuzzy</i>TECH for Business provides all three
        presentation forms (text, table, and matrix), while also
        allowing for switching between them or using them in
        mixed formats. </font></li>
    <li><font size="2" face="arial"><b>Inference methods<br>
        </b>Aside from the standard fuzzy inference methods
        (MAX-MIN, MAX-PROD), <i>fuzzy</i>TECH for Business
        supports the expanded Fuzzy Associative Map inference.
        FAM is an extension of fuzzy inference which was
        developed out of the combination of neural technology and
        fuzzy logic. It allows more accurate tuning of the rule
        bases according to the prerequisites, and as a result, it
        reduces the often necessary selection procedures of the
        rules. <br>
        <i>fuzzy</i>TECH for Business supports not only the
        maximum operator for result aggregation, but also the
        BSUM operator (Bounded-Sum). This operator also considers
        the so-called &quot;support rules&quot; which support the
        current firing rule.<br>
        The fuzzy inference of <i>fuzzy</i>TECH for Business
        represents a combination of forward/backward chaining
        which is totally transparent for the user. <i>fuzzy</i>TECH
        for Business automatically decides the best processing
        method appropriate to the current fuzzy logic system.</font><font
        size="2"> </font></li>
    <li><font size="2" face="arial"><b>Fuzzy operators<br>
        </b><i>fuzzy</i>TECH for Business provides families of
        generalized operators for fuzzy inference, from which you
        can create a desired operator through free
        parameterization of the available operators. There are
        three operator families available: Min-Max, Avg-Max, and
        Gamma. The Min-Max family represents a generalization of
        the &quot;traditional&quot; fuzzy operators that can also
        be created as a special case of Min-Max. Through broad
        empirical research, we now know that the Gamma families
        are able to represent the human characteristics of
        decision behavior the best. Through free parameterization
        you can individually modify your Gamma operators to
        achieve the optimum of your desired system. The Avg-Max
        family is an approximation of the Gamma operator family,
        optimized with regards to computing efficiency.
        Especially in cases requiring the processing of huge
        amounts of data in a short time, you may choose the
        Avg-Max operators, thereby giving up some of the higher
        accuracy provided by the Gamma operators. </font></li>
</ul>

<h3><font size="3" face="arial">Efficiency of the Fuzzy Inference
Engine </font></h3>

<p><font size="2" face="arial"><i>fuzzy</i>TECH for Business can
process even large data sets in a very short amount of time. For
instance, the code generator computes a fuzzy logic system with 8
inputs and 4 outputs each with 7 terms and 500 weighted rules in
just 0.4 milliseconds on a 486SX-PC/33MHz machine. That means
2500 decisions in just one second on a standard PC.</font><font
size="2"> </font></p>
<div align="left">

<table border="1" cellspacing="1" width="100%" bgcolor="#ffff00">
    <tr>
        <td bgcolor="#000080"><font color="#00ffff" size="5"
        face="arial"><b><i>fuzzy</i></b><b>TECH for Business /
        Fuzzy Logic Decision Making</b></font> </td>
        <td align="center"><a href="index.htm"><img
        src="home.gif" alt="go back to home page" width="21"
        height="21"></a><a href="e_ft4bbo.htm"><img
        src="previous.gif" alt="go to previous page in sequence"
        width="21" height="21"></a><a href="e_ft4bdp.htm"><img
        src="next.gif" alt="go to next page in sequence"
        width="21" height="21"></a> </td>
    </tr>
</table>
</div>
</body>
</html>

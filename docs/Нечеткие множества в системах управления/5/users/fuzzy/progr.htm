<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
   <META NAME="Author" CONTENT="Ludmila Zueva">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.01 [en] (Win95; I) [Netscape]">
   <TITLE>Инструментальные средства</TITLE>
</HEAD>
<BODY>
<B><I><FONT SIZE=+2>                Инструментальные средства.</FONT></I></B>
<BR><B><FONT SIZE=+2>FuzzyTech</FONT></B>

<P>Пакет fuzzyTECH for Business  произведен  Inform Software Corporation.
Пакет позволяет проектировать и отлаживать фази системы, конечным продуктом
разработки системы является генерируемый при помощи пакета программный
модуль.
<BR>Программный пакет fuzzyTECH  содержит два  редактора:
<BR> редактор для создания и работы с лингвистическими переменными;
<BR> редактор  для работы с базой фази правил.
<BR>   Работа с редактором переменных
<BR>Каждая лингвистическая  переменная  соответствует определенной исходной
переменной, которая называется базовой. Для базовой переменной вводятся
диапазон изменения,  а также значение которое ей присваивается в случае,
если это значение не определено  для входной переменной или не вычислено
для выходной  переменной. Оно обозначается  словом  «Default», и используется,
например, в случае  если есть ошибки или пропуски во входных данных.
<BR> Для определения лингвистической переменной задается ее имя и набор
возможных значений(Term name).
<BR> Редактор для работы с переменными позволяет графически определить для
каждого из возможных значений лингвистической переменной функцию принадлежности(сокращенное
обозначение  MBF).
<BR> В fuzzyTECH функция принадлежности определяется при помощи координат
или так называемых точек определения(Definition point).
<BR> Точки определения  связываются линейными или нелинейными функциями. 
Как правило используются четыре стандартные  линейные функции принадлежности:
Z-тип, лямбда-тип, Р- тип и S-тип. Функции принадлежности обычно нормализуются
и их максимум  µ=1, минимум 0.
<BR>Стандартные MBF функции задаются графически  следующим образом:
<BR>Шаг 1 Для каждого значения лингвистической переменной определяется
самое типичное численное значение, в этой точке функции принадлежности
присваивается значение µ=1.
<BR>Шаг 2  Значение µ=0 присваивается функции принадлежности в граничной
точке,   которая является самой типичной уже для другого (соседнего) значения
лингвистической функции
<BR>Шаг 3 Связывают точку  µ=1 и  µ=0 соответствующей линией
<BR>Шаг 4  Для самого правого и самого левого на оси Х  значений лингвистической
переменной используется соответственно S- тип и Z-тип  функции принадлежности.
<BR>Функции принадлежности могут быть нелинейными. В результате исследований
были сформулированы некоторые требования к функции принадлежности и установлено
, что им удовлетворяет только одна нелинейная функция - кубический сплайн.
В программном  пакете  fuzzyTECH на использование этой функции указывает
параметр "shape".
<BR> Процесс нахождения по базовой переменной соответствующего ей значения
лингвистической переменной называется Fuzzification.
<BR>Процесс обратного преобразования называется Defuzzification.
<BR>Для обратного преобразования  лингвистических переменных используются
следующие методы:
<BR>CoM - метод центра максимума, который используется для большинства
приложений фази логики, данный метод является наиболее компромиссным.
<BR>Fast CoA метод центра области, подобный CoM,
<BR> и
<BR>MoM  метод значения максимума используются при распознавании образов
<BR>MoM BSUM и CoA BSUM варианты MoM и  CoA, которые более эффективны.
<BR>Hyper CoM используется для фази приложений, в которых выводятся не
только позитивные рекомендации но и негативные результаты в форме предупреждений 
и запретов.
<BR>В то время как CoM и  CoA методы являются наиболее компромиссными, MoM
представляет наиболее выигрышное решение.
<BR>Обратное преобразование - последний шаг в работе фази системы.

<P>  Редактор для работы с базой правил

<P> Блоки правил осуществляют стратегию управления фази системы. Каждый
блок правил включает все правила для определенного решения. Решение определяется
входными и выходными переменными и правилами.
<BR>Часть правила перед словом «если» описывает ситуацию при которой правило
применяется. Часть правила после слова «тогда» описывает реакцию системы
на эту ситуацию. Вес каждого правила (DoS ) отражает степень его важности.
<BR> Процесс выполнения правила начинается с проверки выполнения условия
«если». Оператор типа блока правил определяет какой метод при этом используется.
Существуют типы операторов MIN-MAX, MIN-AVG, GAMMA. Характеристика каждого
типа оператора определяется дополнительными параметрами.
<BR>Например:
<BR>.MIN-MAX,  значение параметра 0 = Minimum Operator (MIN)
<BR>MIN-MAX, значение параметра 1  = Maximum Operator (MAX)
<BR>GAMMA, значение параметра 0    = Product Operator (PROD)

<P>Minimum Operator обобщение Булева 'and'; Maximum Operator обобщение
Булева 'or'.
<BR>В фази правилах обычно комбинируется несколько условий и одно заключение.
<BR>Если используется метод BSUM все правила  оцениваются, если MAX метод
только главные правила оцениваются.
<BR> 
<BR> 
<BR> 

<P><B><FONT SIZE=+2>CubiCalc</FONT></B>
<BR>Среди лидеров нового рынка программных продуктов на основе фази логики
выделяется американская компания Hyper Logic, основанная в 1987 году Фредом
Уоткинсом (Fred Watkins). Первоначально компания специализировалась на
нейронных сетях (на рынке Москвы можно найти один из ее ранних продуктов
- пакет OWL , содержащий исходные тексты всех известных реализаций нейронных
сетей), однако вскоре целиком сконцентрировалась на нечеткой логике. Недавно
вышедшая на рынок вторая версия пакета CubiCalc фирмы HyperLogic является
одной из наиболее мощных экспертных систем на основе нечеткой логики. Пакет
содержит интерактивную оболочку для разработки нечетких экспертных систем
и систем управления, а также run-time модуль, позволяющий оформлять созданные
пользователем системы в виде отдельных программ. От других пакетов CubiCalc
отличает также наличие весьма мощной утилиты Rule Maker, позволяющей решать
одну из основных проблем в работе с нечеткой логикой - автоматическое построение
нечетких правил(функций принадлежности). В основе RuleMaker лежат усовершенствованные
алгоритмы кластеризации Кохонена . А запрет на ввоз в Россию самого пакета
CubiCalc был преодолен лишь в середине 1995 года. Сегодня CubiCalc применяется
при решении десятков различных задач - от адаптивного управления оптовыми
складами до моделирования рынка фьючерсных контрактов. Большинство пользователей
CubiCalc - это финансовые и политические аналитики, которым нечеткая логика
помогает ориентироваться в нечеткой действительности
<BR>Однако перечисленные выше программы - это сложные комплексные системы,
требующие определенных усилий по освоению и настройке. На другом полюсе
рынка находится семейство легких и компактных программ, основанных на нечеткой
логике.
<BR><B><FONT SIZE=+2>FuziCalc</FONT></B>
<BR>    Их наиболее ярким представителем является пакет FuziCalc американской
фирмы FuziWare. Интерфейсная оболочка пакета  FuziCalc схожа с обычными
электронными таблицами.. Поля, значения которых известны неточно, помечаются
специальным значком (в FuziCalc это серый треугольник). Сами значения в
простейшем случае представляются четверкой чисел (минимум, максимум и наиболее
вероятный диапазон). Например : "Обычно в моем магазине бывает от 30 до
50 продаж в день, но никогда не менее 10 и не более 80". В графическом
представлении такому высказыванию соответствует трапециевидная функция 
принадлежности (впрочем, пакет позволяет описывать и значительно более
сложные функции). Итоговый результат вычислений будет представлен подобными
же четверками чисел , например : "Завтрашняя прибыль вероятнее всего будет
находиться в диапазоне 1050 - 1200 долларов, в наихудшем случае - около
800, в наилучшем - 1200". Благодаря своей компактности и простоте интерфейса,
пакет FuziCalc находит применение при проведении оценочных расчетов и прогнозов
в самых различных областях экономики. Там, где исходные данные неточны
и неполны, а скорость получения первых оценок критична - нечеткая логика
практически не имеет альтернатив.
<BR> 

<P><B><FONT SIZE=+2>Бизнес-прогноз</FONT></B>
<BR>    На принципах нечеткой построен и один из отечественных программных
продуктов - известный многим пакет "Бизнес-прогноз". Назначение этого пакета
- оценка рисков и потенциальной прибыльности различных бизнес-планов, инвестционных
проектов и просто идей по развитию бизнеса. "Ведя" пользователя по сценарию
его замысла, программа задает ряд вопросов, допускающих как точные количественные
ответы, так и приближенные качественные оценки - типа "маловероятно", "степень
риска высока" и т.д. Обобщив всю полученную информацию в виде единой схемы
бизнес-проекта, программа не только выносит окончательный вердикт о рискованности
проекта и ожидаемых прибылях, но и указывает критические точки и слабые
места в авторском замысле. От аналогичных иностранных пакетов "Бизнес-прогноз"
отличается простотой, дешевизной и, разумеется, русскоязычным интерфейсом.
<BR> 
</BODY>
</HTML>
